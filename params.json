{"name":"Annokey","tagline":"Annotation of gene lists with keyword hits from the NCBI gene database and PubMed abstracts","body":"### Introduction\r\nAnnokey is a tool for annotating gene lists with the results of a keyword search of the NCBI gene database and linked Pubmed article information. Its purpose is to help users prioritise genetic mutations ordered by relevance to a domain of interest, such as \"breast cancer\" or \"DNA repair pathways\" etcetera. The user steers the search by specifying a ranked list of keywords and phrases that are likely to be highly correlated with their domain of interest.\r\n\r\nAnnokey's main inputs are:\r\n\r\n1. A CSV file representing your set of genes, one gene per row.\r\n2. A list of search terms sorted in descending order of priority.\r\n\r\nAnnokey's main output is a new CSV file representing an annotated version of the input CSV file. Each row of the CSV file (representing a given gene) is given an extra column containing information about which search terms matched that gene in NCBI and PubMed abstracts.\r\n\r\nFor example, if your input gene CSV file contains the following rows:\r\n\r\n    Gene\r\n    XRCC2\r\n    PALB2\r\n    BRCA1\r\n\r\nand your input search term file contains the following lines:\r\n\r\n    DNA repair\r\n    breast cancer\r\n\r\nthe output CSV file produced by Annokey will look like this:\r\n\r\n\r\n```\r\nGene,Annokey_annotation\r\nXRCC2,\"(kw: DNA repair, rank: 1, ncbi id: 7516, fields: Process;Alternative Name;PMID(106/181))\",\"(kw: breast cancer, rank: 2, ncbi id: 7516, fields: GeneRIFs(8/33);PMID(53/181))\"\r\nPALB2,\"(kw: DNA repair, rank: 1, ncbi id: 79728, fields: GeneRIFs(2/77);Process;PMID(34/189))\",\"(kw: breast cancer, rank: 2, ncbi id: 79728, fields: GeneRIFs(37/77);Summary;PMID(147/189))\"\r\nBRCA1,\"(kw: DNA repair, rank: 1, ncbi id: 672, fields: GeneRIFs(27/1258);Summary;Process;PMID(380/3659))\",\"(kw: breast cancer, rank: 2, ncbi id: 672, fields: GeneRIFs(334/1258);Summary;Description;Alternative Name;PMID(2268/3659))\"\r\n```\r\n\r\nAs you can see the output contains a lot of detail about each search term match. Consider the first case for XRCC2:\r\n\r\n```\r\n\"(kw: DNA repair, rank: 1, ncbi id: 7516, fields: Process;Alternative Name;PMID(106/181))\",\"(kw: breast cancer, rank: 2, ncbi id: 7516, fields: GeneRIFs(8/33);PMID(53/181))\"\r\n```\r\n\r\nThis annotation contains two entries, one each for the search terms \"DNA repair\" and \"breast cancer\". The entry for \"DNA repair\" says that the search term had rank 1 (it was the first entry in the file of search terms), the gene record for XRCC2 was found in the NCBI database record with ID 7516, and the search term was found in three places: \"Process\", \"Alternative Name\" and PMID(106/181)\".\r\n\r\n### Installation\r\n\r\nThe best way to install Annokey is to use the following command:\r\n\r\n    pip install git+https://github.com/bjpop/annokey.git\r\n\r\nThis will automatically download and install the dependencies of Annokey.\r\n\r\n### Online versus offline search\r\n\r\nAnnokey obtains its search results by querying the NCBI gene database. It can access that data in two ways:\r\n\r\n1. By sending queries to the online database via the Entrez programming interface.\r\n2. By searching in a locally cached copy of the data.\r\n\r\nOnline queries give you access to the most up-to-date version of the database, but at the cost of being much slower, and requiring an internet connection. The offline version searches in a local copy of the database stored on your computer. Offline search is potentially much faster than online search and does not need an internet access. However, your local copy of the database may not necessarily contain the most up-to-date data.\r\n\r\nAnnokey automatically keeps a local cache of any data retrieved from an online search. This allows you to incrementally accumulate a local copy of parts of the database, without having to download the entire thing in advance.\r\n\r\nBy default Annokey keeps its cache of the NCBI Gene Database in a directory called `genecache`, however you can specify an alternative location via a command line argument. The structure of the cache directory is as follows:\r\n\r\n    genecache\r\n        organism (e.g. human, mouse)\r\n            hash_dir (a numbered directory in the range [0,255])\r\n                gene_name (e.g. PALB2)\r\n                    gene_id (XML file, e.g 79728)\r\n\r\nAt the top level is the genecache directory. This has sub-directories for each organism. This has up to 256 sub-directories numbered 0 to 255. The purpose of these sub-directories is to spread out the stored gene information, so that we don't put all the gene files in one sub-directory. Some computer file systems exhibit poor performance when you put too many files in one directory.\r\n\r\n\r\n***\r\n\r\n\r\n**Technical note**: the database records for each gene are stored underneath one of the 256 possible hash directories. The exact hash directory is determined by the formula:\r\n\r\n    md5(gene_name) % 256\r\n\r\nwhere `gene_name` is the (string) gene name (such as \"PALB2\"), md5 is a hash function and % is the modulus operator. We are only using md5 as a way to evenly distribute gene names to directories, so we don't care about its cryptographic properties (particularly its known weaknesses). \r\n\r\nFor example, the entry for PALB2 is calculated as follows:\r\n\r\n    md5(\"PALB2\") % 256 = 163\r\n\r\nWhich means that PALB2 will be found in genecache/human/163/PALB2/79728. The actual data is stored in the file called 79728, which is in XML format. The number 79728 is the NCBI Gene database ID of the PALB2, which is also reflected in the URL to access the entry in the online database [http://www.ncbi.nlm.nih.gov/gene/79728](http://www.ncbi.nlm.nih.gov/gene/79728).\r\n\r\n\r\n***\r\n\r\n### How to use Annokey from the command line\r\n   ","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}